### Python is necessary for AWS CLI
language: python
python:
  - "3.8.5"

### Installing pre-requisites
install:
    - wget https://github.com/gohugoio/hugo/releases/download/v0.75.1/hugo_0.75.1_Linux-64bit.deb
    - sudo dpkg -i hugo*.deb
    - pip install awscli
    - gem install mdl

### Testing markdown and building website
script:
    - mdl -r ~MD002,~MD013,~MD033 content/ # rules that have been exluded
    - if [[ $TRAVIS_BRANCH == "master" ]]; then hugo; else hugo --config=test.yml; fi

### Sending newly generated website to S3 bucket
deploy:
  # Control deployment by setting a value for `on`. Setting the `branch`
  # option to `master` means Travis will only attempt a deployment on
  # builds of your repo's master branch (e.g., after you merge a PR).
  - provider: s3
    on:
      branch: master
    # You can refer to environment variables from Travis repo settings!
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    # Name of the S3 bucket to which your site should be uploaded.
    bucket: $S3_BUCKET
    # Prevent Travis from deleting your built site so it can be uploaded.
    skip_cleanup: true
    # Path to a directory containing your built site.
    local_dir: public
    # Set the Cache-Control header.
    cache_control: "max-age=21600"
  - provider: pages
    on:
      all_branches: true
      condition: $TRAVIS_BRANCH != "master"
    # GitHub Repo to deploy to
    repo: "carceneaux/carceneaux.github.io"
    # Target branch to commit to
    target-branch: "master"
    # Sets the custom domain for my GitHub page
    fqdn: test.arsano.ninja
    # Prevent Travis from deleting your built site so it can be uploaded.
    skip-cleanup: true
    # GitHub personal access token
    github-token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
    # Path to a directory containing your built site.
    local-dir: public

### Forcing AWS CloudFront to refresh its cache
after_deploy:
  # Invalidate every object in the targeted distribution.
  - if [[ $TRAVIS_BRANCH == "master" ]]; then aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"; fi